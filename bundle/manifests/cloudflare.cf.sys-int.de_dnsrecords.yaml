apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: dnsrecords.cloudflare.cf.sys-int.de
spec:
  group: cloudflare.cf.sys-int.de
  names:
    kind: DNSRecord
    listKind: DNSRecordList
    plural: dnsrecords
    singular: dnsrecord
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: DNSRecord is the Schema for the dnsrecords API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: DNSRecordSpec defines the desired state of DNSRecord
            properties:
              cloudflare:
                description: Cloudflare Credentials
                properties:
                  CLOUDFLARE_API_KEY:
                    default: CLOUDFLARE_API_KEY
                    description: Key in the secret to use for Cloudflare API Key,
                      defaults to CLOUDFLARE_API_KEY. Needs Email also to be provided.
                      For Delete operations for new tunnels only, or as an alternate
                      to API Token
                    type: string
                  CLOUDFLARE_API_TOKEN:
                    default: CLOUDFLARE_API_TOKEN
                    description: Key in the secret to use for Cloudflare API token,
                      defaults to CLOUDFLARE_API_TOKEN
                    type: string
                  CLOUDFLARE_TUNNEL_CREDENTIAL_FILE:
                    default: CLOUDFLARE_TUNNEL_CREDENTIAL_FILE
                    description: Key in the secret to use as credentials.json for
                      an existing tunnel, defaults to CLOUDFLARE_TUNNEL_CREDENTIAL_FILE
                    type: string
                  CLOUDFLARE_TUNNEL_CREDENTIAL_SECRET:
                    default: CLOUDFLARE_TUNNEL_CREDENTIAL_SECRET
                    description: Key in the secret to use as tunnel secret for an
                      existing tunnel, defaults to CLOUDFLARE_TUNNEL_CREDENTIAL_SECRET
                    type: string
                  accountId:
                    description: Account ID in Cloudflare. AccountId and AccountName
                      cannot be both empty. If both are provided, Account ID is used
                      if valid, else falls back to Account Name.
                    type: string
                  accountName:
                    description: Account Name in Cloudflare. AccountName and AccountId
                      cannot be both empty. If both are provided, Account ID is used
                      if valid, else falls back to Account Name.
                    type: string
                  domain:
                    description: Cloudflare Domain to which this tunnel belongs to
                    type: string
                  email:
                    description: Email to use along with API Key for Delete operations
                      for new tunnels only, or as an alternate to API Token
                    type: string
                  secret:
                    description: Secret containing Cloudflare API key/token
                    type: string
                type: object
              foo:
                description: Foo is an example field of DNSRecord. Edit dnsrecord_types.go
                  to remove/update
                type: string
            type: object
          status:
            description: DNSRecordStatus defines the observed state of DNSRecord
            properties:
              conditions:
                description: 'INSERT ADDITIONAL STATUS FIELD - define observed state
                  of cluster Important: Run "make" to regenerate code after modifying
                  this file'
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
