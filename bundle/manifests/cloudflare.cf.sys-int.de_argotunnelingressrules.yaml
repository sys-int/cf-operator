apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: argotunnelingressrules.cloudflare.cf.sys-int.de
spec:
  group: cloudflare.cf.sys-int.de
  names:
    kind: ArgoTunnelIngressRule
    listKind: ArgoTunnelIngressRuleList
    plural: argotunnelingressrules
    singular: argotunnelingressrule
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ArgoTunnelIngressRule is the Schema for the argotunnelingressrules
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ArgoTunnelIngressRuleSpec defines the desired state of ArgoTunnelIngressRule
            properties:
              argoTunnelRef:
                description: ArgoTunnelRef specifies the referenced ArgoTunnel. Defaults
                  to the service.metadata.name + tunnel.spec.domain. If specifying
                  this, make sure to use the same domain that the tunnel belongs to.
                  This is not validated and used as provided
                properties:
                  name:
                    description: The name of the referenced ArgoTunnel
                    type: string
                  namespace:
                    description: The namespace of the referenced ArgoTunnel (optional)
                    type: string
                required:
                - name
                type: object
              caPool:
                description: CaPool trusts the CA certificate referenced by the key
                  in the secret specified in tunnel.spec.originCaPool. tls.crt is
                  trusted globally and does not need to be specified. Only useful
                  if the protocol is HTTPS.
                type: string
              fqdn:
                description: Fqdn specifies the DNS name to access this service from.
                  Defaults to the service.metadata.name + tunnel.spec.domain. If specifying
                  this, make sure to use the same domain that the tunnel belongs to.
                  This is not validated and used as provided
                type: string
              noTlsVerify:
                default: false
                description: NoTlsVerify disables TLS verification for this service.
                  Only useful if the protocol is HTTPS.
                type: boolean
              protocol:
                description: Protocol specifies the protocol for the service. Should
                  be one of http, https, tcp, udp, ssh or rdp. Defaults to http, with
                  the exceptions of https for 443, smb for 139 and 445, rdp for 3389
                  and ssh for 22 if the service has a TCP port. The only available
                  option for a UDP port is udp, which is default.
                type: string
              proxyAddress:
                default: 127.0.0.1
                description: ProxyAddress configures the listen address for that proxy
                pattern: ((^((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))$)|(^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:))$))
                type: string
              proxyPort:
                default: 0
                description: ProxyPort configures the listen port for that proxy
                maximum: 65535
                minimum: 0
                type: integer
              proxyType:
                default: ""
                description: ProxyType configures the proxy type.
                enum:
                - ""
                - socks
                type: string
              target:
                description: Target specified where the tunnel should proxy to. Defaults
                  to the form of <protocol>://<service.metadata.name>.<service.metadata.namespace>.svc:<port>
                type: string
            type: object
          status:
            description: ArgoTunnelIngressRuleStatus defines the observed state of
              ArgoTunnelIngressRule
            properties:
              conditions:
                description: 'INSERT ADDITIONAL STATUS FIELD - define observed state
                  of cluster Important: Run "make" to regenerate code after modifying
                  this file'
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
